
package wsClient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DescriptionWS", targetNamespace = "http://wsServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DescriptionWS {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteDescriptionById", targetNamespace = "http://wsServices/", className = "wsClient.DeleteDescriptionById")
    @ResponseWrapper(localName = "deleteDescriptionByIdResponse", targetNamespace = "http://wsServices/", className = "wsClient.DeleteDescriptionByIdResponse")
    public void deleteDescriptionById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteDescription", targetNamespace = "http://wsServices/", className = "wsClient.DeleteDescription")
    @ResponseWrapper(localName = "deleteDescriptionResponse", targetNamespace = "http://wsServices/", className = "wsClient.DeleteDescriptionResponse")
    public void deleteDescription(
        @WebParam(name = "arg0", targetNamespace = "")
        Description arg0);

    /**
     * 
     * @return
     *     returns java.util.List<wsClient.Description>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDescriptions", targetNamespace = "http://wsServices/", className = "wsClient.GetAllDescriptions")
    @ResponseWrapper(localName = "getAllDescriptionsResponse", targetNamespace = "http://wsServices/", className = "wsClient.GetAllDescriptionsResponse")
    public List<Description> getAllDescriptions();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addDescription", targetNamespace = "http://wsServices/", className = "wsClient.AddDescription")
    @ResponseWrapper(localName = "addDescriptionResponse", targetNamespace = "http://wsServices/", className = "wsClient.AddDescriptionResponse")
    public void addDescription(
        @WebParam(name = "arg0", targetNamespace = "")
        Description arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateDescription", targetNamespace = "http://wsServices/", className = "wsClient.UpdateDescription")
    @ResponseWrapper(localName = "updateDescriptionResponse", targetNamespace = "http://wsServices/", className = "wsClient.UpdateDescriptionResponse")
    public void updateDescription(
        @WebParam(name = "arg0", targetNamespace = "")
        Description arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns wsClient.Description
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getDescriptionById", targetNamespace = "http://wsServices/", className = "wsClient.GetDescriptionById")
    @ResponseWrapper(localName = "getDescriptionByIdResponse", targetNamespace = "http://wsServices/", className = "wsClient.GetDescriptionByIdResponse")
    public Description getDescriptionById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
